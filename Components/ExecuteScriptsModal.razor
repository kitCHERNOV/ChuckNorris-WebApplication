@using BlazorApp1.Models
@using BlazorApp1.Services
@using System.Data.SqlClient
@using Npgsql;
@inject NavigationManager navigationManager


<div class="modal" tabindex="-1" role="dialog" style="display:block">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Выполнение скриптов</h5>
                <button type="button" class="close" @onclick="CloseModal">&times;</button>
            </div>
            <div class="modal-body">
                @if (true)
                {
                    GG();
                    @foreach (var script in scripts)
                    {
                        <p>Выполняется скрипт: @script</p>
                        // Выполнение скрипта на сервере
                        if (ExecuteScript(script))
                        {
                            <p>Скрипт выполнен успешно.</p>
                        }
                        else
                        {
                            <p>Ошибка выполнения скрипта: @errorMessage</p>
                            break;
                        }
                    }
                    <p>Все скрипты выполнены успешно.</p>
                }
                else
                {
                    <p>Ошибка выполнения скриптов: @errorMessage</p>
                }
                <p>Скрипт выполнен успешно.</p>
            </div>
        </div>
    </div>
</div>




@code {
    [Parameter]
    public Server Server { get; set; }

    [Parameter]
    public EventCallback OnModalClosed { get; set; }

    private string errorMessage = "";
    private string[] scripts = { "CREATE TABLE...", "INSERT INTO...", "DELETE FROM..." };

    protected override void OnInitialized()
    {
        ExecuteScripts();
    }

    private void GG()
    {
        Console.WriteLine("GGGGGG");
    }

    private bool ExecuteScripts()
    {
        try
        {
            var connectionString = $"Server={Server.UserName};Database={Server.Database};User Id={Server.Login};Password={Server.Password}";
            using (var connection = new NpgsqlConnection(connectionString))
            {
                connection.Open();
                foreach (var script in scripts)
                {
                    if (!ExecuteScript(script))
                    {
                        return false;
                    }
                }
            }
            return true;
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            return false;
        }
    }

    private bool ExecuteScript(string script)
    {
        // Выполнение скрипта на сервере
        try
        {
            // Выполнение скрипта на сервере
            // Используйте SqlCommand для выполнения SQL-запроса
            Console.WriteLine("treu");
            return true;
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            Console.WriteLine(errorMessage);
            return false;
        }
    }

    private void CloseModal()
    {
        OnModalClosed.InvokeAsync();
        navigationManager.NavigateTo("/success", true);
    }
}