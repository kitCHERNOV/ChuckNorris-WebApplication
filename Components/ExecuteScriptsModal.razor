@using BlazorApp1.Models
@using BlazorApp1.Services
@using Npgsql;
@*@inject NavigationManager navigationManager *@


<div class="modal" tabindex="-1" role="dialog" style="display:block">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Выполнение скриптов</h5>
                <button type="button" class="close" @onclick="CloseModal">&times;</button>
            </div>
            <div class="modal-body">
                @if (string.IsNullOrEmpty(errorMessage))
                {
                    
                    // Выполнение скрипта на сервере
                    if (ExecuteScript())
                    {
                        <p>Скрипт выполнен успешно.</p>
                    }
                    else
                    {
                        <p>Ошибка выполнения скрипта: @errorMessage</p>
                    }
                    
                }
                else
                {
                    <p>Ошибка выполнения скриптов: @errorMessage</p>
                }
                
            </div>
        </div>
    </div>
</div>




@code {
    [Parameter]
    public Server Server { get; set; }

    [Parameter]
    public EventCallback OnModalClosed { get; set; }

    private string errorMessage = "";
    // private string[] scripts = { "CREATE TABLE...", "INSERT INTO...", "DELETE FROM..." };
    private string QueryStr;
    ServerService servFuncs = new();
    


    private bool ExecuteScript()
    {
        var ConnPath = string.Format(
                "Host=127.0.0.1;Port={0};Username={1};Password={2};Database={3}",
                Server.Port,
                Server.UserName,
                Server.Password,
                Server.Database
            );
        // string filePath = "C:/Users/Админ/source/repos/ChuckNorris/StdSqlScripts/1.txt";
        string filePath = "./StdSqlScripts/1.txt";
        try
        {
            // Считываем весь текст из файла
            QueryStr = File.ReadAllText(filePath);

            // Выводим содержимое файла на консоль
            // Console.WriteLine("Goood");
            // Console.WriteLine(QueryStr);
        }
        catch (Exception ex)
        {
            // Обработка ошибок
            Console.WriteLine($"ExecuteScriptsModal. Ошибка при чтении файла: {ex.Message}");
        }


        // Выполнение скрипта на сервере
        try
        {
            servFuncs.ExecuteAddedScript(ref ConnPath, ref QueryStr);
            
            Console.WriteLine("Script execute seccess!");
            return true;
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            Console.WriteLine(errorMessage);
            return false;
        }
    }

    private void CloseModal()
    {
        OnModalClosed.InvokeAsync();
        // navigationManager.NavigateTo("/success", true);
    }
}